import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,b as n,d as s,e as t,a}from"./app-2bc3c870.js";const i={},u=n("h1",{id:"mi-freeform-3-技术相关",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mi-freeform-3-技术相关","aria-hidden":"true"},"#"),s(" Mi-Freeform 3 技术相关")],-1),r=n("p",null,"米窗之前的版本一直不够稳定，且使用的VirtualDisplay会有一些问题，比如会时常跳出小窗，且部分应用无法在小窗中启动。",-1),k=n("p",null,"AOSP和部分国产ROM（如MIUI）采用的小窗方式是使用DecorCaptionView，将应用程序DecorView移至DecorCaptionView，从而实现小窗功能。该方式实现最佳，不过需要修改较多的源码，并且经过证明，修改后仍然有较多问题。",-1),d=n("p",null,"米窗3采用了与VirtualDisplayAdapter/OverlayDisplayAdapter平行的自定义适配器：MiFreeformDisplayAdapter，将该类在Android启动时注入framework，为此，开发者做了以下努力：",-1),v=a(`<li><p>如何与该自定义适配器进行通信？</p><blockquote><p>在Android中，用户态程序获取系统服务的方式通常是走Binder，米窗3亦是如此。米窗3定义了一个专用系统服务MiFreeformService，该类继承自IMiFreeformService.Stub，该服务是一个Binder，我们可以通过ServiceManager#addService()方法，将其添加到系统服务列表。在此我们会发现，米窗3并不能顺利添加自定义系统服务。</p></blockquote></li><li><p>为什么不能顺利添加自定义系统服务？</p><blockquote><p>SELinux限制。在Linux/Android下，除了基础的权限限制，系统还引入了SELinux，SELinux对每个角色可以执行什么操作进行了严格限制，为此，我们需要给米窗3所需要执行的内容编写SELinux规则。Magisk可以在sepolicy.rule中编写自定义的SELinux规则，米窗3所需要的规则如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>allow untrusted_app default_android_service service_manager find
allow system_server default_android_service service_manager add
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li><li><p>在添加完自定义服务后，为什么用户程序仍然无法发现？</p><blockquote><p>获取系统服务最终需要调用ServiceManager#getService()方法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">IBinder</span> <span class="token function">getService</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">IBinder</span> service <span class="token operator">=</span> sCache<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>service <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> service<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Binder</span><span class="token punctuation">.</span><span class="token function">allowBlocking</span><span class="token punctuation">(</span><span class="token function">rawGetService</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RemoteException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;error in getService&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为我们的自定义系统服务不在sCache中，所以需要走else，不过因为未知原因，这里无法通过else获取到米窗3自定义的系统服务。所以米窗3采用了将自定义系统服务添加到sCache中的做法：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">addService</span><span class="token punctuation">(</span><span class="token string">&quot;mi_freeform&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">IBinder</span><span class="token punctuation">&gt;</span></span> cache <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cache<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mi_freeform&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">initServiceCache</span><span class="token punctuation">(</span>cache<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li>`,3),m=n("p",null,"如何获取到DisplayManagerService？",-1),g={href:"https://github.com/Kr328/ZygoteLoader",target:"_blank",rel:"noopener noreferrer"},b=a(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">DisplayManagerService</span> <span class="token keyword">extends</span> <span class="token class-name">SystemService</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">BinderService</span> <span class="token keyword">extends</span> <span class="token class-name">IDisplayManager<span class="token punctuation">.</span>Stub</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以直接通过ServiceManager获取到BinderService，不过注意到，该类是DisplayManagerService的内部类，而在日常使用时，内部类是可以直接访问外部类的变量的，这是因为内部类持有外部类的实例。我们可以通过反射的方式获取到外部类的实例(this$0表示顶层外部类引用)：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// get out class field</span>
<span class="token class-name">Field</span> field <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;this$0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,3),f=a(`<li><p>为什么通过反射获取DisplayManagerService时会抛出NoClassDefFoundError异常？</p><blockquote><p>当米窗3想要实例化上述字段来获取DMS实例时，发现会抛出NoClassDefFoundError异常。这是因为当前的ClassLoader中不包括/system/framework/services.jar路径，而DMS类在该jar包中。为此，我们需要使用BinderService的实例的ClassLoader来加载DMS类：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// get out class field</span>
<span class="token class-name">Field</span> field <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;this$0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ClassLoader</span> classLoader <span class="token operator">=</span> service<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">assert</span> classLoader <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token comment">//for find dms, we need service\`s classloader</span>
<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> dmsClass <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.android.server.display.DisplayManagerService&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// get DisplayManagerService</span>
<span class="token class-name">Object</span> displayManagerService <span class="token operator">=</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时，米窗3实例化了DMS，下面需要加载MiFreeformDisplayAdapter，为了让MDA与DMS可通过同一ClassLoader加载（否则仍然会抛出NoClassDefFoundError），米窗3做了以下操作：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//add MiFreeformServer dex to path</span>
classLoader<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;addDexPath&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>classLoader<span class="token punctuation">,</span> <span class="token string">&quot;/system/framework/freeform.dex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> mfClass <span class="token operator">=</span> classLoader<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token string">&quot;com.android.server.display.MiFreeformDisplayAdapter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Object</span> mf <span class="token operator">=</span> mfClass<span class="token punctuation">.</span><span class="token function">getConstructors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>mSyncRoot<span class="token punctuation">,</span> mContext<span class="token punctuation">,</span> mHandler<span class="token punctuation">,</span> mDisplayDeviceRepo<span class="token punctuation">,</span> mUiHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li>`,1),y=n("p",null,"用户程序可以通过以下方式获取到mi_freeform服务：",-1),S=a(`<div class="language-kotlin line-numbers-mode" data-ext="kt"><pre class="language-kotlin"><code><span class="token keyword">val</span> serviceManager <span class="token operator">=</span> Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;android.os.ServiceManager&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">val</span> binder <span class="token operator">=</span> HiddenApiBypass<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>serviceManager<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;getService&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;mi_freeform&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">as</span> IBinder
Log<span class="token punctuation">.</span><span class="token function">e</span><span class="token punctuation">(</span>TAG<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;mf binder </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">binder</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token keyword">val</span> mfs <span class="token operator">=</span> IMiFreeformService<span class="token punctuation">.</span>Stub<span class="token punctuation">.</span><span class="token function">asInterface</span><span class="token punctuation">(</span>binder<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),h={href:"https://github.com/LSPosed/AndroidHiddenApiBypass",target:"_blank",rel:"noopener noreferrer"},_=a(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//frameworks/base/core/java/android/app/SystemServiceRegistry.java</span>

 <span class="token comment">// add for infrare scan</span>
 <span class="token function">registerService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">INFRARE_SCAN_SERVICE</span><span class="token punctuation">,</span> <span class="token class-name">InfrareScanManager</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
       <span class="token keyword">new</span> <span class="token class-name">CachedServiceFetcher</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">InfrareScanManager</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token class-name">InfrareScanManager</span> <span class="token function">createService</span><span class="token punctuation">(</span><span class="token class-name">ContextImpl</span> ctx<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServiceNotFoundException</span> <span class="token punctuation">{</span>
                <span class="token class-name">IBinder</span> b <span class="token operator">=</span> <span class="token class-name">ServiceManager</span><span class="token punctuation">.</span><span class="token function">getService</span><span class="token punctuation">(</span><span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token constant">INFRARE_SCAN_SERVICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">IInfrareScanManager</span> service <span class="token operator">=</span> <span class="token class-name">IInfrareScanManager<span class="token punctuation">.</span>Stub</span><span class="token punctuation">.</span><span class="token function">asInterface</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string">&quot;InfrareScanManager&quot;</span><span class="token punctuation">,</span><span class="token string">&quot; &quot;</span><span class="token operator">+</span>b<span class="token operator">+</span><span class="token string">&quot;   &quot;</span><span class="token operator">+</span>service<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">InfrareScanManager</span><span class="token punctuation">(</span>ctx<span class="token punctuation">.</span><span class="token function">getOuterContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> service<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// add end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),w=n("p",null,"HiddenApi冲突？",-1),M={href:"https://github.com/RikkaApps/HiddenApiRefinePlugin",target:"_blank",rel:"noopener noreferrer"},D=a(`<li><p>在创建完DisplayDevice后，无法立即获得LogicalDisplay从而拿到displayId？</p><blockquote><p>调用DisplayDeviceRepository#addListener()添加监听，在添加成功后给Binder回调即可。</p></blockquote></li><li><p>给远程服务设置Surface不生效？</p><blockquote><p>编写AIDL文件时，需要给Surface设置为in，而非inout。如：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">void</span> <span class="token function">createFreeform</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token class-name">IMiFreeformDisplayCallback</span> callback<span class="token punctuation">,</span>
                       <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">int</span> densityDpi<span class="token punctuation">,</span>
                       <span class="token keyword">boolean</span> secure<span class="token punctuation">,</span> <span class="token keyword">boolean</span> ownContentOnly<span class="token punctuation">,</span> <span class="token keyword">boolean</span> shouldShowSystemDecorations<span class="token punctuation">,</span>
                       in <span class="token class-name">Surface</span> surface<span class="token punctuation">,</span> <span class="token keyword">float</span> refreshRate<span class="token punctuation">,</span> <span class="token keyword">long</span> presentationDeadlineNanos<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">resizeFreeform</span><span class="token punctuation">(</span><span class="token class-name">IBinder</span> appToken<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">int</span> densityDpi<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote></li>`,2);function q(x,C){const e=o("ExternalLinkIcon");return c(),l("div",null,[u,r,k,d,n("ul",null,[v,n("li",null,[m,n("blockquote",null,[n("p",null,[s("实例化MiFreeformDisplayAdapter需要DisplayManagerService的一些字段，为此米窗3需要设法获取到DMS实例。获取DMS实例常用方式是通过Xposed hook，不过这会增加用户成本，为此，米窗3选择使用Riru/Zygisk方式进行获取。因为获取DMS后执行的操作均在Java层完成，所以米窗3选择了"),n("a",g,[s("ZygoteLoader"),t(e)]),s("。该库额外提供了代理SystemService的功能，米窗3利用该功能，监听display系统服务的添加。 不过，display系统服务是一个Binder，并不是DMS，米窗3如何通过display系统服务获取到DMS呢？这里注意到，display系统服务是下面类的实例：")]),b])]),f,n("li",null,[y,n("blockquote",null,[S,n("p",null,[s("此处使用了"),n("a",h,[s("AndroidHiddenApiBypass"),t(e)]),s('，传统的getSystemService("mi_freeform")无法获取，因为没有注册服务：')]),_])]),n("li",null,[w,n("blockquote",null,[n("p",null,[s("在调用android.jar中提供，但是部分内容被隐藏的类时(如SurfaceControl)，我们很难处理，这里米窗3使用了"),n("a",M,[s("HiddenApiRefinePlugin"),t(e)]),s("来处理，将系统类起一个别名。")])])]),D])])}const A=p(i,[["render",q],["__file","mi_freeform_system_server.html.vue"]]);export{A as default};
