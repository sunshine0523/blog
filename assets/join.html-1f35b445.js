import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as t,b as s,d as a,e as l,a as r}from"./app-2bc3c870.js";const i="/blog/assets/1712536900706-18d2e9dc.png",c={},d=s("p",null,"MySQL中的join种类可以分为以下几种：",-1),u=s("ul",null,[s("li",null,"内连接"),s("li",null,"外连接"),s("li",null,"交叉连接")],-1),k=s("p",null,"一个比较常见的图是下面的这张，看完即懂：",-1),v=s("p",null,[s("img",{src:i,alt:"1712536900706"})],-1),m=s("p",null,"根据上面的三种连接，我们分别做介绍。",-1),b={href:"https://leetcode.cn/problems/combine-two-tables/description/",target:"_blank",rel:"noopener noreferrer"},y=r(`<p>表: <code>Person</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+-------------+---------+
| 列名         | 类型     |
+-------------+---------+
| PersonId    | int     |
| FirstName   | varchar |
| LastName    | varchar |
+-------------+---------+
personId 是该表的主键（具有唯一值的列）。
该表包含一些人的 ID 和他们的姓和名的信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表: <code>Address</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>+-------------+---------+
| 列名         | 类型    |
+-------------+---------+
| AddressId   | int     |
| PersonId    | int     |
| City        | varchar |
| State       | varchar |
+-------------+---------+
addressId 是该表的主键（具有唯一值的列）。
该表的每一行都包含一个 ID = PersonId 的人的城市和州的信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数据如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Person表:
+----------+----------+-----------+
| personId | lastName | firstName |
+----------+----------+-----------+
| 1        | Wang     | Allen     |
| 2        | Alice    | Bob       |
+----------+----------+-----------+
Address表:
+-----------+----------+---------------+------------+
| addressId | personId | city          | state      |
+-----------+----------+---------------+------------+
| 1         | 2        | New York City | New York   |
| 2         | 3        | Leetcode      | California |
+-----------+----------+---------------+------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_1-内连接" tabindex="-1"><a class="header-anchor" href="#_1-内连接" aria-hidden="true">#</a> 1.内连接</h2><p>内连接(inner join)找的是两张表的交集。比如上面的例子中，查询结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> p<span class="token punctuation">.</span>FirstName <span class="token keyword">as</span> firstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName <span class="token keyword">as</span> lastName<span class="token punctuation">,</span> a<span class="token punctuation">.</span>City <span class="token keyword">as</span> city<span class="token punctuation">,</span> a<span class="token punctuation">.</span>State <span class="token keyword">as</span> state
<span class="token keyword">from</span> Person p
<span class="token keyword">inner</span> <span class="token keyword">join</span> Address a <span class="token keyword">on</span> p<span class="token punctuation">.</span>personId <span class="token operator">=</span> a<span class="token punctuation">.</span>personId<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">|</span> firstName <span class="token operator">|</span> lastName <span class="token operator">|</span> city          <span class="token operator">|</span> state    <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token comment">--------- | -------- | ------------- | -------- |</span>
<span class="token operator">|</span> Bob       <span class="token operator">|</span> Alice    <span class="token operator">|</span> New York City <span class="token operator">|</span> New York <span class="token operator">|</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于inner join，可以省略为join，即join表示的就是inner join。</p><h2 id="_2-外连接" tabindex="-1"><a class="header-anchor" href="#_2-外连接" aria-hidden="true">#</a> 2.外连接</h2><p>外连接找的是两张表的交集+某张表/两张表的不满足内容。在MySQL中，外连接有三种：</p><ul><li>全外连接</li><li>左连接</li><li>右连接</li></ul><h3 id="_2-1-全外连接" tabindex="-1"><a class="header-anchor" href="#_2-1-全外连接" aria-hidden="true">#</a> 2.1 全外连接</h3><p>全外连接 full outer join可以表示两张表的并集，不过我们使用MySQL时，是没有 <code>full join</code>或者 <code>full outer join</code>的，因为MySQL并不支持，所以我们可以考虑使用 <code>left join</code>等方式实现。</p><h3 id="_2-2-左连接" tabindex="-1"><a class="header-anchor" href="#_2-2-左连接" aria-hidden="true">#</a> 2.2 左连接</h3><p>左连接找的是两张表的交集和左表（where 中的那张表）的全内容，即，左表全表返回，右表予以匹配，无匹配则为NULL。</p><p>对于上面的例子，查询结果如下：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> p<span class="token punctuation">.</span>FirstName <span class="token keyword">as</span> firstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName <span class="token keyword">as</span> lastName<span class="token punctuation">,</span> a<span class="token punctuation">.</span>City <span class="token keyword">as</span> city<span class="token punctuation">,</span> a<span class="token punctuation">.</span>State <span class="token keyword">as</span> state
<span class="token keyword">from</span> Person p
<span class="token keyword">left</span> <span class="token keyword">join</span> Address a <span class="token keyword">on</span> p<span class="token punctuation">.</span>personId <span class="token operator">=</span> a<span class="token punctuation">.</span>personId<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">|</span> firstName <span class="token operator">|</span> lastName <span class="token operator">|</span> city          <span class="token operator">|</span> state    <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token comment">--------- | -------- | ------------- | -------- |</span>
<span class="token operator">|</span> Allen     <span class="token operator">|</span> Wang     <span class="token operator">|</span> <span class="token boolean">null</span>          <span class="token operator">|</span> <span class="token boolean">null</span>     <span class="token operator">|</span>
<span class="token operator">|</span> Bob       <span class="token operator">|</span> Alice    <span class="token operator">|</span> New York City <span class="token operator">|</span> New York <span class="token operator">|</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-右连接" tabindex="-1"><a class="header-anchor" href="#_2-3-右连接" aria-hidden="true">#</a> 2.3 右连接</h3><p>右连接和左连接相似，只不过现在是右表（<strong>注意这里！from字句中的仍然是左表，right join后的才是右表！</strong>）全表返回，左表予以匹配，无匹配则为NULL：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> p<span class="token punctuation">.</span>FirstName <span class="token keyword">as</span> firstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName <span class="token keyword">as</span> lastName<span class="token punctuation">,</span> a<span class="token punctuation">.</span>City <span class="token keyword">as</span> city<span class="token punctuation">,</span> a<span class="token punctuation">.</span>State <span class="token keyword">as</span> state
<span class="token keyword">from</span> Address a
<span class="token keyword">right</span> <span class="token keyword">join</span> Person p <span class="token keyword">on</span> p<span class="token punctuation">.</span>personId <span class="token operator">=</span> a<span class="token punctuation">.</span>personId<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">|</span> firstName <span class="token operator">|</span> lastName <span class="token operator">|</span> city          <span class="token operator">|</span> state    <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token comment">--------- | -------- | ------------- | -------- |</span>
<span class="token operator">|</span> Allen     <span class="token operator">|</span> Wang     <span class="token operator">|</span> <span class="token boolean">null</span>          <span class="token operator">|</span> <span class="token boolean">null</span>     <span class="token operator">|</span>
<span class="token operator">|</span> Bob       <span class="token operator">|</span> Alice    <span class="token operator">|</span> New York City <span class="token operator">|</span> New York <span class="token operator">|</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们可以看到，右连和左连结果是一样的！因为Person是右表，现在以它为主。我们现在可以以Address为右表，就会以它为主了：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> p<span class="token punctuation">.</span>FirstName <span class="token keyword">as</span> firstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName <span class="token keyword">as</span> lastName<span class="token punctuation">,</span> a<span class="token punctuation">.</span>City <span class="token keyword">as</span> city<span class="token punctuation">,</span> a<span class="token punctuation">.</span>State <span class="token keyword">as</span> state
<span class="token keyword">from</span> Person p
<span class="token keyword">right</span> <span class="token keyword">join</span> Address a <span class="token keyword">on</span> p<span class="token punctuation">.</span>personId <span class="token operator">=</span> a<span class="token punctuation">.</span>personId<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">|</span> firstName <span class="token operator">|</span> lastName <span class="token operator">|</span> city          <span class="token operator">|</span> state      <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token comment">--------- | -------- | ------------- | ---------- |</span>
<span class="token operator">|</span> Bob       <span class="token operator">|</span> Alice    <span class="token operator">|</span> New York City <span class="token operator">|</span> New York   <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token boolean">null</span>      <span class="token operator">|</span> <span class="token boolean">null</span>     <span class="token operator">|</span> Leetcode      <span class="token operator">|</span> California <span class="token operator">|</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>所以，左连和右连基本是可以相互替换的。</p><h2 id="_3-交叉连接" tabindex="-1"><a class="header-anchor" href="#_3-交叉连接" aria-hidden="true">#</a> 3.交叉连接</h2><p>交叉连接得到的是笛卡尔积，注意的是，交叉连接不需要条件，所以没有 <code>on</code>跟随：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> p<span class="token punctuation">.</span>FirstName <span class="token keyword">as</span> firstName<span class="token punctuation">,</span> p<span class="token punctuation">.</span>LastName <span class="token keyword">as</span> lastName<span class="token punctuation">,</span> a<span class="token punctuation">.</span>City <span class="token keyword">as</span> city<span class="token punctuation">,</span> a<span class="token punctuation">.</span>State <span class="token keyword">as</span> state
<span class="token keyword">from</span> Person p
<span class="token keyword">cross</span> <span class="token keyword">join</span> Address a<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">|</span> firstName <span class="token operator">|</span> lastName <span class="token operator">|</span> city          <span class="token operator">|</span> state      <span class="token operator">|</span>
<span class="token operator">|</span> <span class="token comment">--------- | -------- | ------------- | ---------- |</span>
<span class="token operator">|</span> Bob       <span class="token operator">|</span> Alice    <span class="token operator">|</span> New York City <span class="token operator">|</span> New York   <span class="token operator">|</span>
<span class="token operator">|</span> Allen     <span class="token operator">|</span> Wang     <span class="token operator">|</span> New York City <span class="token operator">|</span> New York   <span class="token operator">|</span>
<span class="token operator">|</span> Bob       <span class="token operator">|</span> Alice    <span class="token operator">|</span> Leetcode      <span class="token operator">|</span> California <span class="token operator">|</span>
<span class="token operator">|</span> Allen     <span class="token operator">|</span> Wang     <span class="token operator">|</span> Leetcode      <span class="token operator">|</span> California <span class="token operator">|</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,38);function h(g,w){const n=o("ExternalLinkIcon");return p(),t("div",null,[d,u,k,v,m,s("p",null,[a("为了方便演示，我们选择"),s("a",b,[a("力扣的175题"),l(n)]),a("作为背景：")]),y])}const f=e(c,[["render",h],["__file","join.html.vue"]]);export{f as default};
